# Generated by Django 4.2.2 on 2023-06-29 15:35

import User.models
import cloudinary.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[User.models.validate_date_of_birth])),
                ('phone', models.CharField(max_length=15, unique=True, validators=[User.models.validate_phone_number])),
                ('national_id', models.CharField(max_length=14, unique=True, validators=[User.models.validate_egypt_national_id])),
                ('profileImgUrl', cloudinary.models.CloudinaryField(max_length=255, validators=[User.models.validateImage], verbose_name='images')),
                ('password', models.CharField(max_length=128, validators=[User.models.validate_password])),
                ('confirm_password', models.CharField(max_length=128)),
                ('gender', models.CharField(max_length=6, validators=[User.models.validate_gender])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
    ]
